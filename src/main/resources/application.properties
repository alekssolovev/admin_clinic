spring.application.name=clinic-admin

spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/db_name
spring.datasource.username=username
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=create
#create удалять и заново создавать таблицы на основе entity при каждом запуске
#create-drop создать таблицы на основе entity при запуске приложения,
# удалить при закрытии контекста (подходит для тестов)
#validate проверка соответствия БД и entity, если они не соответствуют друг другу,
# приложение не запустится
#update обновление БД в соответствие с entity классами
#none не выполняется никаких действий
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
# schema.sql data.sql
# always / never / embedded для встроенных БД

inject.service.title=clinic
inject.service.number=5
inject.settings_type=BASE

# Профили используются для запуска прилождения с разными настройками
# или для включения / выключения / изменения функционала

# На уровне кола профилями можно управлять аннотацией Profile

# для запуска с указанием профиля в VM options:
# -Dspring.profiles.active=ИМЯ_ПРОФИЛЯ
# -Dspring.profiles.active=ИМЯ_ПРОФИЛЯ_01,ИМЯ_ПРОФИЛЯ_02

# Профили можно описать:
# 1. в разных properties файлах, тогда имя файла зависит от имени профиля
# application-ИМЯ_ПРОФИЛЯ.properties

# 2. последовательно в одном properties файле
# настройки для профиля с указанным именем
# spring.config.activate.on-profile=ИМЯ_ПРОФИЛЯ_01
# настройки ИМЯ_ПРОФИЛЯ_01

#spring.config.activate.on-profile=ИМЯ_ПРОФИЛЯ_02
# настройки ИМЯ_ПРОФИЛЯ_02
